{
  "task": "CODE_GENERATION",
  "prompt": "Create an interactive fluid dynamics simulation that demonstrates the behavior of hot and cold liquids mixing in a virtual coffee mug.\n\nFeatures:\n• Display a large, centered coffee mug viewed from the side, showing a cross-section of the liquid inside.\n• Implement a particle system that represents different temperature fluids with distinct colors (e.g., red for hot, blue for cold).\n• Simulate fluid dynamics where particles interact based on temperature differences, creating realistic convection currents.\n• Include a temperature gradient display on the side of the mug showing the current temperature distribution.\n• Add visual steam effects above the liquid when the average temperature is high.\n• Display a digital thermometer showing the current average temperature.\n• Create smooth animations for particle movement and mixing.\n• Implement realistic physics for fluid behavior, including viscosity and density effects.\n\nUser Actions:\n1. Click and drag the mouse to 'pour' either hot or cold liquid particles into the mug (user can toggle between hot/cold using a button).\n\n2. Click a 'Stir' button to create a circular mixing motion in the liquid, affecting all particles currently in the mug.\nNote:\n- Your output should be implemented in JavaScript with HTML and CSS.\n- Ensure that the output has both index.js and index.html files\n",
  "criteria": [
    {
      "max": 100,
      "min": 1,
      "type": "multi-score",
      "options": ["1", "2", "3", "4"]
    }
  ],
  "responses": [
    {
      "model": "1",
      "completion": {
        "files": [
          {
            "content": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eFluid Dynamics Simulation\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background:#2c3e50;display:flex;justify-content:center;align-items:center;height:100vh}canvas{border-radius:10px}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#fff}button{background:#3498db;color:white;border:none;padding:5px 10px;margin:5px;border-radius:3px;cursor:pointer}button:hover{background:#2980b9}input[type=\"range\"]{width:150px}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleTemp\"\u003eToggle Hot/Cold (Current: Hot)\u003c/button\u003e\u003cbutton id=\"stir\"\u003eStir\u003c/button\u003e\u003cbr/\u003e\u003clabel\u003eHeat Source: \u003cinput id=\"heatSlider\" max=\"100\" min=\"0\" type=\"range\" value=\"50\"/\u003e\u003c/label\u003e\u003cbr/\u003e\u003cdiv id=\"thermometer\"\u003eTemperature: \u003cspan id=\"tempDisplay\"\u003e25°C\u003c/span\u003e\u003c/div\u003e\u003c/div\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleTempBtn=document.getElementById('toggleTemp');const stirBtn=document.getElementById('stir');const heatSlider=document.getElementById('heatSlider');const tempDisplay=document.getElementById('tempDisplay');canvas.width=800;canvas.height=600;const particles=[];let isHot=true;let isStirring=false;let stirAngle=0;const mugWidth=300;const mugHeight=400;const mugX=(canvas.width-mugWidth)/2;const mugY=(canvas.height-mugHeight)/2;class Particle{constructor(x,y,temp){this.x=x;this.y=y;this.vx=0;this.vy=0;this.temp=temp;this.radius=3;}update(){if(isStirring){const centerX=mugX+mugWidth/2;const centerY=mugY+mugHeight/2;const dx=this.x-centerX;const dy=this.y-centerY;const angle=Math.atan2(dy,dx);const dist=Math.sqrt(dx*dx+dy*dy);this.vx-=Math.cos(angle)*0.5;this.vy-=Math.sin(angle)*0.5;}this.vy+=0.1*(this.temp-50)/50;this.vx*=0.98;this.vy*=0.98;this.x+=this.vx;this.y+=this.vy;if(this.x\u003cmugX+10)this.x=mugX+10;if(this.x\u003emugX+mugWidth-10)this.x=mugX+mugWidth-10;if(this.y\u003cmugY+10)this.y=mugY+10;if(this.y\u003emugY+mugHeight-10)this.y=mugY+mugHeight-10;const heatSource=parseInt(heatSlider.value);if(this.y\u003emugY+mugHeight-50){this.temp+=(heatSource-this.temp)*0.01;}for(let p of particles){if(p!==this){const dx=p.x-this.x;const dy=p.y-this.y;const dist=Math.sqrt(dx*dx+dy*dy);if(dist\u003c10){const tempDiff=(p.temp-this.temp)*0.1;this.temp+=tempDiff;p.temp-=tempDiff;}}}}}function drawMug(){ctx.fillStyle='#ecf0f1';ctx.strokeStyle='#bdc3c7';ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(mugX,mugY);ctx.lineTo(mugX+mugWidth,mugY);ctx.lineTo(mugX+mugWidth,mugY+mugHeight);ctx.lineTo(mugX,mugY+mugHeight);ctx.closePath();ctx.fill();ctx.stroke();ctx.beginPath();ctx.arc(mugX+mugWidth,mugY+mugHeight/4,40,0,Math.PI*2);ctx.stroke();}function drawThermometer(){const avgTemp=particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length||0;tempDisplay.textContent=`${Math.round(avgTemp)}°C`;ctx.fillStyle='rgba(255,255,255,0.2)';ctx.fillRect(mugX+mugWidth+20,mugY,20,mugHeight);ctx.fillStyle='#e74c3c';const height=mugHeight*(avgTemp/100);ctx.fillRect(mugX+mugWidth+20,mugY+mugHeight-height,20,height);}function drawSteam(){if(particles.length\u003e0){const avgTemp=particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length;if(avgTemp\u003e70){ctx.strokeStyle='rgba(255,255,255,0.1)';ctx.beginPath();for(let i=0;i\u003c5;i++){const x=mugX+mugWidth/2+Math.sin(Date.now()/1000+i)*20;const startY=mugY;ctx.moveTo(x,startY);ctx.quadraticCurveTo(x+20,startY-40,x+Math.sin(Date.now()/1000+i)*40,startY-80);}ctx.stroke();}}}function draw(){ctx.fillStyle='#2c3e50';ctx.fillRect(0,0,canvas.width,canvas.height);drawMug();for(let p of particles){const hue=p.temp*1.2;ctx.fillStyle=`hsl(${hue},70%,50%)`;ctx.beginPath();ctx.arc(p.x,p.y,p.radius,0,Math.PI*2);ctx.fill();}drawThermometer();drawSteam();}function update(){for(let p of particles){p.update();}if(isStirring){stirAngle+=0.1;if(stirAngle\u003e=Math.PI*2){isStirring=false;stirAngle=0;}}}function animate(){requestAnimationFrame(animate);update();draw();}canvas.addEventListener('mousemove',(e)=\u003e{if(e.buttons===1){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(x\u003emugX\u0026\u0026x\u003cmugX+mugWidth\u0026\u0026y\u003emugY\u0026\u0026y\u003cmugY+mugHeight){particles.push(new Particle(x,y,isHot?80:20));if(particles.length\u003e500)particles.shift();}}});toggleTempBtn.addEventListener('click',()=\u003e{isHot=!isHot;toggleTempBtn.textContent=`Toggle Hot/Cold (Current: ${isHot?'Hot':'Cold'})`;});stirBtn.addEventListener('click',()=\u003e{isStirring=true;});animate();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e",
            "filename": "index.html",
            "language": "html"
          }
        ],
        "combined_html": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eFluid Dynamics Simulation\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background:#2c3e50;display:flex;justify-content:center;align-items:center;height:100vh}canvas{border-radius:10px}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#fff}button{background:#3498db;color:white;border:none;padding:5px 10px;margin:5px;border-radius:3px;cursor:pointer}button:hover{background:#2980b9}input[type=\"range\"]{width:150px}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleTemp\"\u003eToggle Hot/Cold (Current: Hot)\u003c/button\u003e\u003cbutton id=\"stir\"\u003eStir\u003c/button\u003e\u003cbr/\u003e\u003clabel\u003eHeat Source: \u003cinput id=\"heatSlider\" max=\"100\" min=\"0\" type=\"range\" value=\"50\"/\u003e\u003c/label\u003e\u003cbr/\u003e\u003cdiv id=\"thermometer\"\u003eTemperature: \u003cspan id=\"tempDisplay\"\u003e25°C\u003c/span\u003e\u003c/div\u003e\u003c/div\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleTempBtn=document.getElementById('toggleTemp');const stirBtn=document.getElementById('stir');const heatSlider=document.getElementById('heatSlider');const tempDisplay=document.getElementById('tempDisplay');canvas.width=800;canvas.height=600;const particles=[];let isHot=true;let isStirring=false;let stirAngle=0;const mugWidth=300;const mugHeight=400;const mugX=(canvas.width-mugWidth)/2;const mugY=(canvas.height-mugHeight)/2;class Particle{constructor(x,y,temp){this.x=x;this.y=y;this.vx=0;this.vy=0;this.temp=temp;this.radius=3;}update(){if(isStirring){const centerX=mugX+mugWidth/2;const centerY=mugY+mugHeight/2;const dx=this.x-centerX;const dy=this.y-centerY;const angle=Math.atan2(dy,dx);const dist=Math.sqrt(dx*dx+dy*dy);this.vx-=Math.cos(angle)*0.5;this.vy-=Math.sin(angle)*0.5;}this.vy+=0.1*(this.temp-50)/50;this.vx*=0.98;this.vy*=0.98;this.x+=this.vx;this.y+=this.vy;if(this.x\u003cmugX+10)this.x=mugX+10;if(this.x\u003emugX+mugWidth-10)this.x=mugX+mugWidth-10;if(this.y\u003cmugY+10)this.y=mugY+10;if(this.y\u003emugY+mugHeight-10)this.y=mugY+mugHeight-10;const heatSource=parseInt(heatSlider.value);if(this.y\u003emugY+mugHeight-50){this.temp+=(heatSource-this.temp)*0.01;}for(let p of particles){if(p!==this){const dx=p.x-this.x;const dy=p.y-this.y;const dist=Math.sqrt(dx*dx+dy*dy);if(dist\u003c10){const tempDiff=(p.temp-this.temp)*0.1;this.temp+=tempDiff;p.temp-=tempDiff;}}}}}function drawMug(){ctx.fillStyle='#ecf0f1';ctx.strokeStyle='#bdc3c7';ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(mugX,mugY);ctx.lineTo(mugX+mugWidth,mugY);ctx.lineTo(mugX+mugWidth,mugY+mugHeight);ctx.lineTo(mugX,mugY+mugHeight);ctx.closePath();ctx.fill();ctx.stroke();ctx.beginPath();ctx.arc(mugX+mugWidth,mugY+mugHeight/4,40,0,Math.PI*2);ctx.stroke();}function drawThermometer(){const avgTemp=particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length||0;tempDisplay.textContent=`${Math.round(avgTemp)}°C`;ctx.fillStyle='rgba(255,255,255,0.2)';ctx.fillRect(mugX+mugWidth+20,mugY,20,mugHeight);ctx.fillStyle='#e74c3c';const height=mugHeight*(avgTemp/100);ctx.fillRect(mugX+mugWidth+20,mugY+mugHeight-height,20,height);}function drawSteam(){if(particles.length\u003e0){const avgTemp=particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length;if(avgTemp\u003e70){ctx.strokeStyle='rgba(255,255,255,0.1)';ctx.beginPath();for(let i=0;i\u003c5;i++){const x=mugX+mugWidth/2+Math.sin(Date.now()/1000+i)*20;const startY=mugY;ctx.moveTo(x,startY);ctx.quadraticCurveTo(x+20,startY-40,x+Math.sin(Date.now()/1000+i)*40,startY-80);}ctx.stroke();}}}function draw(){ctx.fillStyle='#2c3e50';ctx.fillRect(0,0,canvas.width,canvas.height);drawMug();for(let p of particles){const hue=p.temp*1.2;ctx.fillStyle=`hsl(${hue},70%,50%)`;ctx.beginPath();ctx.arc(p.x,p.y,p.radius,0,Math.PI*2);ctx.fill();}drawThermometer();drawSteam();}function update(){for(let p of particles){p.update();}if(isStirring){stirAngle+=0.1;if(stirAngle\u003e=Math.PI*2){isStirring=false;stirAngle=0;}}}function animate(){requestAnimationFrame(animate);update();draw();}canvas.addEventListener('mousemove',(e)=\u003e{if(e.buttons===1){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(x\u003emugX\u0026\u0026x\u003cmugX+mugWidth\u0026\u0026y\u003emugY\u0026\u0026y\u003cmugY+mugHeight){particles.push(new Particle(x,y,isHot?80:20));if(particles.length\u003e500)particles.shift();}}});toggleTempBtn.addEventListener('click',()=\u003e{isHot=!isHot;toggleTempBtn.textContent=`Toggle Hot/Cold (Current: ${isHot?'Hot':'Cold'})`;});stirBtn.addEventListener('click',()=\u003e{isStirring=true;});animate();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e"
      }
    },
    {
      "model": "2",
      "completion": {
        "files": [
          {
            "content": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eChemical Reaction Simulator\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background-color:#1a1a1a;font-family:Arial,sans-serif}canvas{display:block}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#fff}button{background:#444;color:#fff;border:none;padding:8px 15px;margin:5px;border-radius:3px;cursor:pointer}button:hover{background:#555}#instructions{position:absolute;bottom:10px;left:10px;color:#fff;font-size:14px;background:rgba(0,0,0,0.5);padding:10px;border-radius:5px}#phMeter{position:absolute;right:10px;top:10px;background:rgba(0,0,0,0.5);padding:10px;border-radius:5px;color:#fff;font-size:18px}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleSolution\"\u003eToggle Acid/Base\u003c/button\u003e\u003cbutton id=\"shake\"\u003eShake Solution\u003c/button\u003e\u003c/div\u003e\u003cdiv id=\"phMeter\"\u003epH: \u003cspan id=\"phValue\"\u003e7.0\u003c/span\u003e\u003c/div\u003e\u003cdiv id=\"instructions\"\u003eClick and drag to pour solution. Current mode: \u003cspan id=\"currentMode\"\u003eAcid\u003c/span\u003e\u003c/div\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleButton=document.getElementById('toggleSolution');const shakeButton=document.getElementById('shake');const phValueDisplay=document.getElementById('phValue');const currentModeDisplay=document.getElementById('currentMode');canvas.width=window.innerWidth;canvas.height=window.innerHeight;let isAcidMode=true;let isPouring=false;let isShaking=false;let shakeTime=0;let particles=[];let bubbles=[];const testTube={x:canvas.width/2,y:canvas.height/2,width:120,height:300,solution:[]};class Particle{constructor(x,y,isAcid){this.x=x;this.y=y;this.radius=3;this.isAcid=isAcid;this.vx=Math.random()*2-1;this.vy=Math.random()*2-1;this.life=1;}update(){if(isShaking){this.vx+=(Math.random()-0.5)*0.5;this.vy+=(Math.random()-0.5)*0.5;}this.x+=this.vx;this.y+=this.vy;this.vy+=0.1;if(this.x\u003ctestTube.x-testTube.width/2+10){this.x=testTube.x-testTube.width/2+10;this.vx*=-0.5;}if(this.x\u003etestTube.x+testTube.width/2-10){this.x=testTube.x+testTube.width/2-10;this.vx*=-0.5;}if(this.y\u003etestTube.y+testTube.height/2-10){this.y=testTube.y+testTube.height/2-10;this.vy*=-0.5;}this.vx*=0.98;this.vy*=0.98;}draw(){ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle=this.isAcid?'hsla(0,80%,50%,'+this.life+')':'hsla(200,80%,50%,'+this.life+')';ctx.fill();}}class Bubble{constructor(x,y){this.x=x;this.y=y;this.radius=Math.random()*3+1;this.vy=-Math.random()*2-1;this.life=1;}update(){this.y+=this.vy;this.life-=0.02;return this.life\u003e0;}draw(){ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle='rgba(255,255,255,'+this.life*0.3+')';ctx.fill();}}function drawTestTube(){ctx.save();ctx.translate(testTube.x,testTube.y);if(isShaking){ctx.rotate(Math.sin(shakeTime*0.1)*0.05);}ctx.beginPath();ctx.moveTo(-testTube.width/2,testTube.height/2);ctx.lineTo(-testTube.width/2,-testTube.height/2);ctx.arc(-testTube.width/2+20,-testTube.height/2+20,20,Math.PI,Math.PI*1.5);ctx.lineTo(testTube.width/2-20,-testTube.height/2);ctx.arc(testTube.width/2-20,-testTube.height/2+20,20,Math.PI*1.5,0);ctx.lineTo(testTube.width/2,testTube.height/2);ctx.closePath();ctx.strokeStyle='rgba(255,255,255,0.5)';ctx.lineWidth=2;ctx.stroke();ctx.restore();}function drawPHScale(){const gradient=ctx.createLinearGradient(50,testTube.y-testTube.height/2,50,testTube.y+testTube.height/2);gradient.addColorStop(0,'#ff0000');gradient.addColorStop(0.5,'#800080');gradient.addColorStop(1,'#0000ff');ctx.fillStyle=gradient;ctx.fillRect(30,testTube.y-testTube.height/2,20,testTube.height);for(let i=0;i\u003c=14;i++){ctx.fillStyle='white';ctx.font='12px Arial';ctx.fillText(i,10,testTube.y-testTube.height/2+i*testTube.height/14);}}function calculatePH(){let acidCount=0;let baseCount=0;particles.forEach(p=\u003e{if(p.isAcid)acidCount++;else baseCount++;});const total=acidCount+baseCount;if(total===0)return 7;const ratio=acidCount/total;return 14-(ratio*14);}function update(){if(isShaking){shakeTime++;if(shakeTime\u003e100){isShaking=false;shakeTime=0;}}particles=particles.filter(p=\u003e{p.update();return p.life\u003e0;});bubbles=bubbles.filter(b=\u003eb.update());if(Math.random()\u003c0.1){bubbles.push(new Bubble(testTube.x+(Math.random()-0.5)*testTube.width,testTube.y+testTube.height/2-10));}const ph=calculatePH();phValueDisplay.textContent=ph.toFixed(1);}function draw(){ctx.fillStyle='#1a1a1a';ctx.fillRect(0,0,canvas.width,canvas.height);drawTestTube();drawPHScale();particles.forEach(p=\u003ep.draw());bubbles.forEach(b=\u003eb.draw());}function addParticle(x,y){if(x\u003etestTube.x-testTube.width/2\u0026\u0026x\u003ctestTube.x+testTube.width/2\u0026\u0026y\u003ctestTube.y+testTube.height/2){particles.push(new Particle(x,y,isAcidMode));}}canvas.addEventListener('mousedown',()=\u003eisPouring=true);canvas.addEventListener('mouseup',()=\u003eisPouring=false);canvas.addEventListener('mousemove',(e)=\u003e{if(isPouring\u0026\u0026particles.length\u003c1000){addParticle(e.clientX,e.clientY);}});toggleButton.addEventListener('click',()=\u003e{isAcidMode=!isAcidMode;currentModeDisplay.textContent=isAcidMode?'Acid':'Base';});shakeButton.addEventListener('click',()=\u003e{isShaking=true;shakeTime=0;});window.addEventListener('resize',()=\u003e{canvas.width=window.innerWidth;canvas.height=window.innerHeight;testTube.x=canvas.width/2;testTube.y=canvas.height/2;});function animate(){update();draw();requestAnimationFrame(animate);}animate();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e",
            "filename": "index.html",
            "language": "html"
          }
        ],
        "combined_html": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eChemical Reaction Simulator\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background-color:#1a1a1a;font-family:Arial,sans-serif}canvas{display:block}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#fff}button{background:#444;color:#fff;border:none;padding:8px 15px;margin:5px;border-radius:3px;cursor:pointer}button:hover{background:#555}#instructions{position:absolute;bottom:10px;left:10px;color:#fff;font-size:14px;background:rgba(0,0,0,0.5);padding:10px;border-radius:5px}#phMeter{position:absolute;right:10px;top:10px;background:rgba(0,0,0,0.5);padding:10px;border-radius:5px;color:#fff;font-size:18px}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleSolution\"\u003eToggle Acid/Base\u003c/button\u003e\u003cbutton id=\"shake\"\u003eShake Solution\u003c/button\u003e\u003c/div\u003e\u003cdiv id=\"phMeter\"\u003epH: \u003cspan id=\"phValue\"\u003e7.0\u003c/span\u003e\u003c/div\u003e\u003cdiv id=\"instructions\"\u003eClick and drag to pour solution. Current mode: \u003cspan id=\"currentMode\"\u003eAcid\u003c/span\u003e\u003c/div\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleButton=document.getElementById('toggleSolution');const shakeButton=document.getElementById('shake');const phValueDisplay=document.getElementById('phValue');const currentModeDisplay=document.getElementById('currentMode');canvas.width=window.innerWidth;canvas.height=window.innerHeight;let isAcidMode=true;let isPouring=false;let isShaking=false;let shakeTime=0;let particles=[];let bubbles=[];const testTube={x:canvas.width/2,y:canvas.height/2,width:120,height:300,solution:[]};class Particle{constructor(x,y,isAcid){this.x=x;this.y=y;this.radius=3;this.isAcid=isAcid;this.vx=Math.random()*2-1;this.vy=Math.random()*2-1;this.life=1;}update(){if(isShaking){this.vx+=(Math.random()-0.5)*0.5;this.vy+=(Math.random()-0.5)*0.5;}this.x+=this.vx;this.y+=this.vy;this.vy+=0.1;if(this.x\u003ctestTube.x-testTube.width/2+10){this.x=testTube.x-testTube.width/2+10;this.vx*=-0.5;}if(this.x\u003etestTube.x+testTube.width/2-10){this.x=testTube.x+testTube.width/2-10;this.vx*=-0.5;}if(this.y\u003etestTube.y+testTube.height/2-10){this.y=testTube.y+testTube.height/2-10;this.vy*=-0.5;}this.vx*=0.98;this.vy*=0.98;}draw(){ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle=this.isAcid?'hsla(0,80%,50%,'+this.life+')':'hsla(200,80%,50%,'+this.life+')';ctx.fill();}}class Bubble{constructor(x,y){this.x=x;this.y=y;this.radius=Math.random()*3+1;this.vy=-Math.random()*2-1;this.life=1;}update(){this.y+=this.vy;this.life-=0.02;return this.life\u003e0;}draw(){ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle='rgba(255,255,255,'+this.life*0.3+')';ctx.fill();}}function drawTestTube(){ctx.save();ctx.translate(testTube.x,testTube.y);if(isShaking){ctx.rotate(Math.sin(shakeTime*0.1)*0.05);}ctx.beginPath();ctx.moveTo(-testTube.width/2,testTube.height/2);ctx.lineTo(-testTube.width/2,-testTube.height/2);ctx.arc(-testTube.width/2+20,-testTube.height/2+20,20,Math.PI,Math.PI*1.5);ctx.lineTo(testTube.width/2-20,-testTube.height/2);ctx.arc(testTube.width/2-20,-testTube.height/2+20,20,Math.PI*1.5,0);ctx.lineTo(testTube.width/2,testTube.height/2);ctx.closePath();ctx.strokeStyle='rgba(255,255,255,0.5)';ctx.lineWidth=2;ctx.stroke();ctx.restore();}function drawPHScale(){const gradient=ctx.createLinearGradient(50,testTube.y-testTube.height/2,50,testTube.y+testTube.height/2);gradient.addColorStop(0,'#ff0000');gradient.addColorStop(0.5,'#800080');gradient.addColorStop(1,'#0000ff');ctx.fillStyle=gradient;ctx.fillRect(30,testTube.y-testTube.height/2,20,testTube.height);for(let i=0;i\u003c=14;i++){ctx.fillStyle='white';ctx.font='12px Arial';ctx.fillText(i,10,testTube.y-testTube.height/2+i*testTube.height/14);}}function calculatePH(){let acidCount=0;let baseCount=0;particles.forEach(p=\u003e{if(p.isAcid)acidCount++;else baseCount++;});const total=acidCount+baseCount;if(total===0)return 7;const ratio=acidCount/total;return 14-(ratio*14);}function update(){if(isShaking){shakeTime++;if(shakeTime\u003e100){isShaking=false;shakeTime=0;}}particles=particles.filter(p=\u003e{p.update();return p.life\u003e0;});bubbles=bubbles.filter(b=\u003eb.update());if(Math.random()\u003c0.1){bubbles.push(new Bubble(testTube.x+(Math.random()-0.5)*testTube.width,testTube.y+testTube.height/2-10));}const ph=calculatePH();phValueDisplay.textContent=ph.toFixed(1);}function draw(){ctx.fillStyle='#1a1a1a';ctx.fillRect(0,0,canvas.width,canvas.height);drawTestTube();drawPHScale();particles.forEach(p=\u003ep.draw());bubbles.forEach(b=\u003eb.draw());}function addParticle(x,y){if(x\u003etestTube.x-testTube.width/2\u0026\u0026x\u003ctestTube.x+testTube.width/2\u0026\u0026y\u003ctestTube.y+testTube.height/2){particles.push(new Particle(x,y,isAcidMode));}}canvas.addEventListener('mousedown',()=\u003eisPouring=true);canvas.addEventListener('mouseup',()=\u003eisPouring=false);canvas.addEventListener('mousemove',(e)=\u003e{if(isPouring\u0026\u0026particles.length\u003c1000){addParticle(e.clientX,e.clientY);}});toggleButton.addEventListener('click',()=\u003e{isAcidMode=!isAcidMode;currentModeDisplay.textContent=isAcidMode?'Acid':'Base';});shakeButton.addEventListener('click',()=\u003e{isShaking=true;shakeTime=0;});window.addEventListener('resize',()=\u003e{canvas.width=window.innerWidth;canvas.height=window.innerHeight;testTube.x=canvas.width/2;testTube.y=canvas.height/2;});function animate(){update();draw();requestAnimationFrame(animate);}animate();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e"
      }
    },
    {
      "model": "3",
      "completion": {
        "files": [
          {
            "content": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eFluid Dynamics Simulation\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background:#2c3e50;display:flex;justify-content:center;align-items:center;height:100vh}canvas{border-radius:5px}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:white;font-family:Arial,sans-serif}button{background:#34495e;color:white;border:none;padding:8px 15px;margin:5px;border-radius:3px;cursor:pointer}button:hover{background:#2c3e50}#temperature{position:absolute;right:10px;top:10px;background:rgba(0,0,0,0.5);color:white;padding:10px;border-radius:5px;font-family:Arial,sans-serif}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleTemp\"\u003eToggle Hot/Cold\u003c/button\u003e\u003cbutton id=\"stir\"\u003eStir\u003c/button\u003e\u003c/div\u003e\u003cdiv id=\"temperature\"\u003eTemperature: \u003cspan id=\"tempValue\"\u003e25°C\u003c/span\u003e\u003c/div\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleTemp=document.getElementById('toggleTemp');const stirButton=document.getElementById('stir');const tempValue=document.getElementById('tempValue');canvas.width=800;canvas.height=600;const particles=[];let isHot=true;let isStirring=false;let stirAngle=0;const cupWidth=300;const cupHeight=400;const cupX=(canvas.width-cupWidth)/2;const cupY=(canvas.height-cupHeight)/2;class Particle{constructor(x,y,temp){this.x=x;this.y=y;this.vx=0;this.vy=0;this.temp=temp;this.radius=3;this.mass=1;}update(){if(isStirring){const centerX=cupX+cupWidth/2;const centerY=cupY+cupHeight/2;const dx=this.x-centerX;const dy=this.y-centerY;const angle=Math.atan2(dy,dx);const distance=Math.sqrt(dx*dx+dy*dy);const stirSpeed=0.05;this.vx-=Math.cos(angle)*stirSpeed;this.vy-=Math.sin(angle)*stirSpeed;}this.vy+=0.1*(25-this.temp)/25;this.x+=this.vx;this.y+=this.vy;this.vx*=0.98;this.vy*=0.98;if(this.x\u003ccupX+10)this.x=cupX+10;if(this.x\u003ecupX+cupWidth-10)this.x=cupX+cupWidth-10;if(this.y\u003ccupY+10)this.y=cupY+10;if(this.y\u003ecupY+cupHeight-10)this.y=cupY+cupHeight-10;particles.forEach(p=\u003e{if(p!==this){const dx=p.x-this.x;const dy=p.y-this.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance\u003c10){const tempDiff=(p.temp-this.temp)*0.1;this.temp+=tempDiff;p.temp-=tempDiff;const angle=Math.atan2(dy,dx);const force=0.5/distance;this.vx-=Math.cos(angle)*force;this.vy-=Math.sin(angle)*force;}}});}draw(){const tempColor=this.temp\u003e25?`rgba(${Math.min(255,this.temp*8)},0,0,0.8)`:`rgba(0,0,${Math.min(255,(50-this.temp)*8)},0.8)`;ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle=tempColor;ctx.fill();}}function drawCup(){ctx.fillStyle='#34495e';ctx.strokeStyle='#2c3e50';ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(cupX,cupY);ctx.lineTo(cupX+cupWidth,cupY);ctx.lineTo(cupX+cupWidth,cupY+cupHeight);ctx.lineTo(cupX,cupY+cupHeight);ctx.closePath();ctx.fill();ctx.stroke();drawTemperatureGradient();}function drawTemperatureGradient(){const gradientHeight=cupHeight-20;const gradientWidth=20;const x=cupX+cupWidth+20;const y=cupY+10;ctx.fillStyle='#2c3e50';ctx.fillRect(x,y,gradientWidth,gradientHeight);const gradient=ctx.createLinearGradient(0,y,0,y+gradientHeight);gradient.addColorStop(0,'red');gradient.addColorStop(0.5,'yellow');gradient.addColorStop(1,'blue');ctx.fillStyle=gradient;ctx.fillRect(x+2,y+2,gradientWidth-4,gradientHeight-4);const avgTemp=getAverageTemperature();const tempHeight=((50-avgTemp)/50)*gradientHeight;ctx.fillStyle='white';ctx.fillRect(x-5,y+tempHeight,gradientWidth+10,2);}function drawSteam(){if(getAverageTemperature()\u003e30){ctx.beginPath();ctx.strokeStyle='rgba(255,255,255,0.1)';for(let i=0;i\u003c10;i++){const x=cupX+cupWidth/2+Math.sin(Date.now()/1000+i)*20;const startY=cupY;const controlY=cupY-50-Math.random()*30;const endY=cupY-100-Math.random()*50;ctx.moveTo(x,startY);ctx.quadraticCurveTo(x+20,controlY,x,endY);}ctx.stroke();}}function getAverageTemperature(){if(particles.length===0)return 25;return particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length;}canvas.addEventListener('mousemove',(e)=\u003e{if(e.buttons===1){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(particles.length\u003c1000){particles.push(new Particle(x,y,isHot?40:10));}}});toggleTemp.addEventListener('click',()=\u003e{isHot=!isHot;toggleTemp.textContent=`Toggle ${isHot?'Hot':'Cold'}`;});stirButton.addEventListener('mousedown',()=\u003eisStirring=true);stirButton.addEventListener('mouseup',()=\u003eisStirring=false);function animate(){ctx.clearRect(0,0,canvas.width,canvas.height);drawCup();drawSteam();particles.forEach(p=\u003e{p.update();p.draw();});tempValue.textContent=`${Math.round(getAverageTemperature())}°C`;requestAnimationFrame(animate);}animate();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e",
            "filename": "index.html",
            "language": "html"
          }
        ],
        "combined_html": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eFluid Dynamics Simulation\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background:#2c3e50;display:flex;justify-content:center;align-items:center;height:100vh}canvas{border-radius:5px}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:white;font-family:Arial,sans-serif}button{background:#34495e;color:white;border:none;padding:8px 15px;margin:5px;border-radius:3px;cursor:pointer}button:hover{background:#2c3e50}#temperature{position:absolute;right:10px;top:10px;background:rgba(0,0,0,0.5);color:white;padding:10px;border-radius:5px;font-family:Arial,sans-serif}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleTemp\"\u003eToggle Hot/Cold\u003c/button\u003e\u003cbutton id=\"stir\"\u003eStir\u003c/button\u003e\u003c/div\u003e\u003cdiv id=\"temperature\"\u003eTemperature: \u003cspan id=\"tempValue\"\u003e25°C\u003c/span\u003e\u003c/div\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleTemp=document.getElementById('toggleTemp');const stirButton=document.getElementById('stir');const tempValue=document.getElementById('tempValue');canvas.width=800;canvas.height=600;const particles=[];let isHot=true;let isStirring=false;let stirAngle=0;const cupWidth=300;const cupHeight=400;const cupX=(canvas.width-cupWidth)/2;const cupY=(canvas.height-cupHeight)/2;class Particle{constructor(x,y,temp){this.x=x;this.y=y;this.vx=0;this.vy=0;this.temp=temp;this.radius=3;this.mass=1;}update(){if(isStirring){const centerX=cupX+cupWidth/2;const centerY=cupY+cupHeight/2;const dx=this.x-centerX;const dy=this.y-centerY;const angle=Math.atan2(dy,dx);const distance=Math.sqrt(dx*dx+dy*dy);const stirSpeed=0.05;this.vx-=Math.cos(angle)*stirSpeed;this.vy-=Math.sin(angle)*stirSpeed;}this.vy+=0.1*(25-this.temp)/25;this.x+=this.vx;this.y+=this.vy;this.vx*=0.98;this.vy*=0.98;if(this.x\u003ccupX+10)this.x=cupX+10;if(this.x\u003ecupX+cupWidth-10)this.x=cupX+cupWidth-10;if(this.y\u003ccupY+10)this.y=cupY+10;if(this.y\u003ecupY+cupHeight-10)this.y=cupY+cupHeight-10;particles.forEach(p=\u003e{if(p!==this){const dx=p.x-this.x;const dy=p.y-this.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance\u003c10){const tempDiff=(p.temp-this.temp)*0.1;this.temp+=tempDiff;p.temp-=tempDiff;const angle=Math.atan2(dy,dx);const force=0.5/distance;this.vx-=Math.cos(angle)*force;this.vy-=Math.sin(angle)*force;}}});}draw(){const tempColor=this.temp\u003e25?`rgba(${Math.min(255,this.temp*8)},0,0,0.8)`:`rgba(0,0,${Math.min(255,(50-this.temp)*8)},0.8)`;ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fillStyle=tempColor;ctx.fill();}}function drawCup(){ctx.fillStyle='#34495e';ctx.strokeStyle='#2c3e50';ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(cupX,cupY);ctx.lineTo(cupX+cupWidth,cupY);ctx.lineTo(cupX+cupWidth,cupY+cupHeight);ctx.lineTo(cupX,cupY+cupHeight);ctx.closePath();ctx.fill();ctx.stroke();drawTemperatureGradient();}function drawTemperatureGradient(){const gradientHeight=cupHeight-20;const gradientWidth=20;const x=cupX+cupWidth+20;const y=cupY+10;ctx.fillStyle='#2c3e50';ctx.fillRect(x,y,gradientWidth,gradientHeight);const gradient=ctx.createLinearGradient(0,y,0,y+gradientHeight);gradient.addColorStop(0,'red');gradient.addColorStop(0.5,'yellow');gradient.addColorStop(1,'blue');ctx.fillStyle=gradient;ctx.fillRect(x+2,y+2,gradientWidth-4,gradientHeight-4);const avgTemp=getAverageTemperature();const tempHeight=((50-avgTemp)/50)*gradientHeight;ctx.fillStyle='white';ctx.fillRect(x-5,y+tempHeight,gradientWidth+10,2);}function drawSteam(){if(getAverageTemperature()\u003e30){ctx.beginPath();ctx.strokeStyle='rgba(255,255,255,0.1)';for(let i=0;i\u003c10;i++){const x=cupX+cupWidth/2+Math.sin(Date.now()/1000+i)*20;const startY=cupY;const controlY=cupY-50-Math.random()*30;const endY=cupY-100-Math.random()*50;ctx.moveTo(x,startY);ctx.quadraticCurveTo(x+20,controlY,x,endY);}ctx.stroke();}}function getAverageTemperature(){if(particles.length===0)return 25;return particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length;}canvas.addEventListener('mousemove',(e)=\u003e{if(e.buttons===1){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(particles.length\u003c1000){particles.push(new Particle(x,y,isHot?40:10));}}});toggleTemp.addEventListener('click',()=\u003e{isHot=!isHot;toggleTemp.textContent=`Toggle ${isHot?'Hot':'Cold'}`;});stirButton.addEventListener('mousedown',()=\u003eisStirring=true);stirButton.addEventListener('mouseup',()=\u003eisStirring=false);function animate(){ctx.clearRect(0,0,canvas.width,canvas.height);drawCup();drawSteam();particles.forEach(p=\u003e{p.update();p.draw();});tempValue.textContent=`${Math.round(getAverageTemperature())}°C`;requestAnimationFrame(animate);}animate();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e"
      }
    },
    {
      "model": "4",
      "completion": {
        "files": [
          {
            "content": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eFluid Dynamics Simulation\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background-color:#2c3e50;display:flex;justify-content:center;align-items:center;height:100vh;font-family:Arial,sans-serif}#canvas{background-color:#34495e;border-radius:8px}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#ecf0f1}button{background:#3498db;color:#fff;border:none;padding:8px 15px;margin:5px;border-radius:4px;cursor:pointer}button:hover{background:#2980b9}#temperature{position:absolute;right:10px;top:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#ecf0f1}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleTemp\"\u003eToggle Hot/Cold\u003c/button\u003e\u003cbutton id=\"stir\"\u003eStir\u003c/button\u003e\u003c/div\u003e\u003cdiv id=\"temperature\"\u003eAverage Temperature: \u003cspan id=\"tempValue\"\u003e25°C\u003c/span\u003e\u003c/div\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleTemp=document.getElementById('toggleTemp');const stirButton=document.getElementById('stir');const tempValue=document.getElementById('tempValue');canvas.width=800;canvas.height=600;const particles=[];let isHot=true;let isStirring=false;let stirAngle=0;const cupWidth=300;const cupHeight=400;const cupX=(canvas.width-cupWidth)/2;const cupY=(canvas.height-cupHeight)/2;class Particle{constructor(x,y,temp){this.x=x;this.y=y;this.vx=0;this.vy=0;this.temp=temp;this.radius=4;this.mass=1;}update(){if(isStirring){const centerX=cupX+cupWidth/2;const centerY=cupY+cupHeight/2;const dx=this.x-centerX;const dy=this.y-centerY;const angle=Math.atan2(dy,dx);const distance=Math.sqrt(dx*dx+dy*dy);const stirForce=0.5;this.vx-=Math.cos(angle)*stirForce;this.vy-=Math.sin(angle)*stirForce;}this.vy+=0.1*(25-this.temp)*0.01;this.x+=this.vx;this.y+=this.vy;this.vx*=0.98;this.vy*=0.98;if(this.x\u003ccupX+10){this.x=cupX+10;this.vx*=-0.5;}if(this.x\u003ecupX+cupWidth-10){this.x=cupX+cupWidth-10;this.vx*=-0.5;}if(this.y\u003ccupY+10){this.y=cupY+10;this.vy*=-0.5;}if(this.y\u003ecupY+cupHeight-10){this.y=cupY+cupHeight-10;this.vy*=-0.5;}particles.forEach(p=\u003e{if(p!==this){const dx=p.x-this.x;const dy=p.y-this.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance\u003cthis.radius*2){const angle=Math.atan2(dy,dx);const targetX=this.x+Math.cos(angle)*this.radius*2;const targetY=this.y+Math.sin(angle)*this.radius*2;const ax=(targetX-p.x)*0.05;const ay=(targetY-p.y)*0.05;p.vx-=ax;p.vy-=ay;this.vx+=ax;this.vy+=ay;const tempDiff=(p.temp-this.temp)*0.1;this.temp+=tempDiff;p.temp-=tempDiff;}}});}draw(){const hue=this.temp*4;ctx.fillStyle=`hsl(${hue},100%,50%)`;ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fill();}}function drawCup(){ctx.strokeStyle='#ecf0f1';ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(cupX,cupY);ctx.lineTo(cupX,cupY+cupHeight);ctx.lineTo(cupX+cupWidth,cupY+cupHeight);ctx.lineTo(cupX+cupWidth,cupY);ctx.stroke();drawTemperatureGradient();}function drawTemperatureGradient(){const gradientHeight=cupHeight-20;const gradientWidth=20;const x=cupX+cupWidth+20;const y=cupY+10;ctx.fillStyle='#2c3e50';ctx.fillRect(x,y,gradientWidth,gradientHeight);const gradient=ctx.createLinearGradient(0,y,0,y+gradientHeight);gradient.addColorStop(0,'hsl(0,100%,50%)');gradient.addColorStop(0.5,'hsl(60,100%,50%)');gradient.addColorStop(1,'hsl(240,100%,50%)');ctx.fillStyle=gradient;ctx.fillRect(x,y,gradientWidth,gradientHeight);const avgTemp=getAverageTemperature();const tempHeight=gradientHeight*(1-avgTemp/100);ctx.strokeStyle='#fff';ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(x-5,y+tempHeight);ctx.lineTo(x+gradientWidth+5,y+tempHeight);ctx.stroke();}function drawSteam(){if(getAverageTemperature()\u003e50){ctx.strokeStyle='rgba(255,255,255,0.1)';ctx.lineWidth=2;for(let i=0;i\u003c5;i++){const startX=cupX+cupWidth/2+Math.sin(Date.now()/1000+i)*20;ctx.beginPath();ctx.moveTo(startX,cupY);const cp1x=startX+Math.sin(Date.now()/1000+i)*30;const cp1y=cupY-30;const cp2x=startX+Math.sin(Date.now()/900+i)*30;const cp2y=cupY-60;const endX=startX+Math.sin(Date.now()/800+i)*30;const endY=cupY-90;ctx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,endX,endY);ctx.stroke();}}}function getAverageTemperature(){if(particles.length===0)return 25;return particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length;}function addParticle(e){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(x\u003ecupX\u0026\u0026x\u003ccupX+cupWidth\u0026\u0026y\u003ecupY\u0026\u0026y\u003ccupY+cupHeight){particles.push(new Particle(x,y,isHot?80:10));}}function update(){ctx.clearRect(0,0,canvas.width,canvas.height);drawCup();particles.forEach(p=\u003e{p.update();p.draw();});drawSteam();if(isStirring){stirAngle+=0.1;if(stirAngle\u003e=Math.PI*2){isStirring=false;stirAngle=0;}}tempValue.textContent=`${Math.round(getAverageTemperature())}°C`;requestAnimationFrame(update);}canvas.addEventListener('mousemove',(e)=\u003e{if(e.buttons===1)addParticle(e);});toggleTemp.addEventListener('click',()=\u003e{isHot=!isHot;toggleTemp.textContent=`Toggle ${isHot?'Hot':'Cold'}`;});stirButton.addEventListener('click',()=\u003e{isStirring=true;});update();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e",
            "filename": "index.html",
            "language": "html"
          }
        ],
        "combined_html": "\u003c!DOCTYPE html\u003e\n\u003chtml lang=\"en\"\u003e\u003chead\u003e\u003cmeta charset=\"utf-8\"/\u003e\u003cmeta content=\"width=device-width,initial-scale=1.0\" name=\"viewport\"/\u003e\u003ctitle\u003eFluid Dynamics Simulation\u003c/title\u003e\u003cstyle\u003ebody{margin:0;overflow:hidden;background-color:#2c3e50;display:flex;justify-content:center;align-items:center;height:100vh;font-family:Arial,sans-serif}#canvas{background-color:#34495e;border-radius:8px}#controls{position:absolute;top:10px;left:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#ecf0f1}button{background:#3498db;color:#fff;border:none;padding:8px 15px;margin:5px;border-radius:4px;cursor:pointer}button:hover{background:#2980b9}#temperature{position:absolute;right:10px;top:10px;background:rgba(255,255,255,0.1);padding:10px;border-radius:5px;color:#ecf0f1}\u003c/style\u003e\u003c/head\u003e\u003cbody\u003e\u003ccanvas id=\"canvas\"\u003e\u003c/canvas\u003e\u003cdiv id=\"controls\"\u003e\u003cbutton id=\"toggleTemp\"\u003eToggle Hot/Cold\u003c/button\u003e\u003cbutton id=\"stir\"\u003eStir\u003c/button\u003e\u003c/div\u003e\u003cdiv id=\"temperature\"\u003eAverage Temperature: \u003cspan id=\"tempValue\"\u003e25°C\u003c/span\u003e\u003c/div\u003e\u003cscript src=\"index.js\"\u003e\u003c/script\u003e\u003cscript\u003econst canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');const toggleTemp=document.getElementById('toggleTemp');const stirButton=document.getElementById('stir');const tempValue=document.getElementById('tempValue');canvas.width=800;canvas.height=600;const particles=[];let isHot=true;let isStirring=false;let stirAngle=0;const cupWidth=300;const cupHeight=400;const cupX=(canvas.width-cupWidth)/2;const cupY=(canvas.height-cupHeight)/2;class Particle{constructor(x,y,temp){this.x=x;this.y=y;this.vx=0;this.vy=0;this.temp=temp;this.radius=4;this.mass=1;}update(){if(isStirring){const centerX=cupX+cupWidth/2;const centerY=cupY+cupHeight/2;const dx=this.x-centerX;const dy=this.y-centerY;const angle=Math.atan2(dy,dx);const distance=Math.sqrt(dx*dx+dy*dy);const stirForce=0.5;this.vx-=Math.cos(angle)*stirForce;this.vy-=Math.sin(angle)*stirForce;}this.vy+=0.1*(25-this.temp)*0.01;this.x+=this.vx;this.y+=this.vy;this.vx*=0.98;this.vy*=0.98;if(this.x\u003ccupX+10){this.x=cupX+10;this.vx*=-0.5;}if(this.x\u003ecupX+cupWidth-10){this.x=cupX+cupWidth-10;this.vx*=-0.5;}if(this.y\u003ccupY+10){this.y=cupY+10;this.vy*=-0.5;}if(this.y\u003ecupY+cupHeight-10){this.y=cupY+cupHeight-10;this.vy*=-0.5;}particles.forEach(p=\u003e{if(p!==this){const dx=p.x-this.x;const dy=p.y-this.y;const distance=Math.sqrt(dx*dx+dy*dy);if(distance\u003cthis.radius*2){const angle=Math.atan2(dy,dx);const targetX=this.x+Math.cos(angle)*this.radius*2;const targetY=this.y+Math.sin(angle)*this.radius*2;const ax=(targetX-p.x)*0.05;const ay=(targetY-p.y)*0.05;p.vx-=ax;p.vy-=ay;this.vx+=ax;this.vy+=ay;const tempDiff=(p.temp-this.temp)*0.1;this.temp+=tempDiff;p.temp-=tempDiff;}}});}draw(){const hue=this.temp*4;ctx.fillStyle=`hsl(${hue},100%,50%)`;ctx.beginPath();ctx.arc(this.x,this.y,this.radius,0,Math.PI*2);ctx.fill();}}function drawCup(){ctx.strokeStyle='#ecf0f1';ctx.lineWidth=5;ctx.beginPath();ctx.moveTo(cupX,cupY);ctx.lineTo(cupX,cupY+cupHeight);ctx.lineTo(cupX+cupWidth,cupY+cupHeight);ctx.lineTo(cupX+cupWidth,cupY);ctx.stroke();drawTemperatureGradient();}function drawTemperatureGradient(){const gradientHeight=cupHeight-20;const gradientWidth=20;const x=cupX+cupWidth+20;const y=cupY+10;ctx.fillStyle='#2c3e50';ctx.fillRect(x,y,gradientWidth,gradientHeight);const gradient=ctx.createLinearGradient(0,y,0,y+gradientHeight);gradient.addColorStop(0,'hsl(0,100%,50%)');gradient.addColorStop(0.5,'hsl(60,100%,50%)');gradient.addColorStop(1,'hsl(240,100%,50%)');ctx.fillStyle=gradient;ctx.fillRect(x,y,gradientWidth,gradientHeight);const avgTemp=getAverageTemperature();const tempHeight=gradientHeight*(1-avgTemp/100);ctx.strokeStyle='#fff';ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(x-5,y+tempHeight);ctx.lineTo(x+gradientWidth+5,y+tempHeight);ctx.stroke();}function drawSteam(){if(getAverageTemperature()\u003e50){ctx.strokeStyle='rgba(255,255,255,0.1)';ctx.lineWidth=2;for(let i=0;i\u003c5;i++){const startX=cupX+cupWidth/2+Math.sin(Date.now()/1000+i)*20;ctx.beginPath();ctx.moveTo(startX,cupY);const cp1x=startX+Math.sin(Date.now()/1000+i)*30;const cp1y=cupY-30;const cp2x=startX+Math.sin(Date.now()/900+i)*30;const cp2y=cupY-60;const endX=startX+Math.sin(Date.now()/800+i)*30;const endY=cupY-90;ctx.bezierCurveTo(cp1x,cp1y,cp2x,cp2y,endX,endY);ctx.stroke();}}}function getAverageTemperature(){if(particles.length===0)return 25;return particles.reduce((sum,p)=\u003esum+p.temp,0)/particles.length;}function addParticle(e){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;if(x\u003ecupX\u0026\u0026x\u003ccupX+cupWidth\u0026\u0026y\u003ecupY\u0026\u0026y\u003ccupY+cupHeight){particles.push(new Particle(x,y,isHot?80:10));}}function update(){ctx.clearRect(0,0,canvas.width,canvas.height);drawCup();particles.forEach(p=\u003e{p.update();p.draw();});drawSteam();if(isStirring){stirAngle+=0.1;if(stirAngle\u003e=Math.PI*2){isStirring=false;stirAngle=0;}}tempValue.textContent=`${Math.round(getAverageTemperature())}°C`;requestAnimationFrame(update);}canvas.addEventListener('mousemove',(e)=\u003e{if(e.buttons===1)addParticle(e);});toggleTemp.addEventListener('click',()=\u003e{isHot=!isHot;toggleTemp.textContent=`Toggle ${isHot?'Hot':'Cold'}`;});stirButton.addEventListener('click',()=\u003e{isStirring=true;});update();\u003c/script\u003e\u003c/body\u003e\u003c/html\u003e"
      }
    }
  ]
}
